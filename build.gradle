plugins {
    id 'base'
}

description = 'Gradle Job Deployment Script'
version = '1.0'

ext {
    jjName = 'qmic-ACT_H2CACHE'
    job_name='ACT_H2CACHE'
    jenkinsHome=System.getenv("JENKINS_HOME")
    scriptletPath="$jenkinsHome/scriptler/scripts" 
    newScriptlets= []
if (new File("scriptler/scripts").exists()){
    new File("scriptler/scripts").eachFile{newScriptlets.add(it.name)}  
	} //end if_exists
}

task copyConfig(type: Copy) {
    from "jobs/$job_name/config.xml"
    into "$jenkinsHome/jobs/$job_name/"
    inputs.sourceFiles.stopExecutionIfEmpty()
}

task copyJobProperties(type: Copy) {
    from "jobs/$job_name/buildProps"
    into "$jenkinsHome/jobs/$job_name/buildProps"
}

task copyJobScripts(type: Copy) {
    from "jobs/$job_name/buildScripts"
    into "$jenkinsHome/jobs/$job_name/buildScripts"

}

task copyScriptlets(type: Copy) {
    from "scriptler/scripts"
    into "$jenkinsHome/scriptler/scripts"
    
}


task copyExternals(type: Copy) {
    description "copies external scripts to Jenkins libs folder"
    from "externalScripts"
    into "$jenkinsHome/libs/externals"
    
}

task deploy(dependsOn: ['backup','copyConfig','copyJobProperties','copyJobScripts','copyScriptlets','copyExternals']){
doLast {
println "$job_name Successfully deployed"
}
}

task backup(type: Copy){

if (! new File("backup").exists()){
   copy {from "$jenkinsHome/jobs/$job_name/config.xml"
    into "backup/$job_name/"}
    
   copy {from "$jenkinsHome/jobs/$job_name/buildScripts"
    into "backup/$job_name/buildScripts"}
    
   copy {from "$jenkinsHome/jobs/$job_name/buildProps"    
    into "backup/$job_name/buildProps"}
    
    newScriptlets.each{
    println "$jenkinsHome/scriptler/scripts/$it"
	    from "$jenkinsHome/scriptler/scripts/$it"    
	    into "backup/scriptler/scripts"
    }
    }
}
